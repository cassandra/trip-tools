# Generated by Django 5.2.7 on 2025-10-27 23:32

import django.db.models.deletion
import tt.apps.common.model_fields
import tt.apps.locations.enums
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("routes", "0001_initial"),
        ("trips", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LocationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Location Category",
                "verbose_name_plural": "Location Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "elevation_ft",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Rating (e.g., 4.5 out of 5)",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "desirability",
                    tt.apps.common.model_fields.LabeledEnumField(
                        blank=True,
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="low",
                        enum_class=tt.apps.locations.enums.DesirabilityType,
                        max_length=32,
                        null=True,
                        use_safe_conversion=True,
                        verbose_name="Desirability",
                    ),
                ),
                (
                    "advanced_booking",
                    tt.apps.common.model_fields.LabeledEnumField(
                        blank=True,
                        choices=[
                            ("not_an_option", "Not an option"),
                            ("optional", "Optional"),
                            ("advisable", "Advisable"),
                            ("required", "Required"),
                        ],
                        default="not_an_option",
                        enum_class=tt.apps.locations.enums.AdvancedBookingType,
                        max_length=32,
                        null=True,
                        use_safe_conversion=True,
                        verbose_name="Advanced Booking",
                    ),
                ),
                ("created_datetime", models.DateTimeField(auto_now_add=True)),
                ("modified_datetime", models.DateTimeField(auto_now=True)),
                (
                    "route",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="locations",
                        to="routes.route",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="trips.trip",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="LocationNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("source_label", models.CharField(blank=True, max_length=200)),
                ("source_url", models.URLField(blank=True)),
                ("created_datetime", models.DateTimeField(auto_now_add=True)),
                ("modified_datetime", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_notes",
                        to="locations.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location Note",
                "verbose_name_plural": "Location Notes",
                "ordering": ["created_datetime"],
            },
        ),
        migrations.CreateModel(
            name="LocationSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField()),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="locations.locationcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location Sub-category",
                "verbose_name_plural": "Location Sub-categories",
                "ordering": ["category", "name"],
                "unique_together": {("category", "slug")},
            },
        ),
        migrations.AddField(
            model_name="location",
            name="subcategory",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="locations",
                to="locations.locationsubcategory",
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["user", "trip"], name="locations_l_user_id_6f0542_idx"
            ),
        ),
    ]
