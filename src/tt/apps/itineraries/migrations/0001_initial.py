# Generated by Django 5.2.7 on 2025-10-27 23:32

import django.db.models.deletion
import tt.apps.common.model_fields
import tt.apps.itineraries.enums
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("locations", "0001_initial"),
        ("routes", "0001_initial"),
        ("trips", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Itinerary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("created_datetime", models.DateTimeField(auto_now_add=True)),
                ("modified_datetime", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itineraries",
                        to="trips.trip",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itineraries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Itinerary",
                "verbose_name_plural": "Itineraries",
                "ordering": ["trip", "title"],
            },
        ),
        migrations.CreateModel(
            name="ItineraryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    tt.apps.common.model_fields.LabeledEnumField(
                        choices=[
                            ("flight", "Flight"),
                            ("rail", "Rail"),
                            ("bus", "Bus/Shuttle"),
                            ("boat", "Boat"),
                            ("car", "Boat"),
                            ("car_rental", "Car rental"),
                            ("car_service", "Car service"),
                            ("lodging", "Lodging"),
                            ("activity", "Activity"),
                            ("tour", "Tour"),
                            ("other", "Other"),
                        ],
                        default="flight",
                        enum_class=tt.apps.itineraries.enums.ItineraryItemType,
                        max_length=32,
                        use_safe_conversion=True,
                        verbose_name="Item Type",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("start_datetime", models.DateTimeField(verbose_name="Start Time")),
                (
                    "end_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="End Time"
                    ),
                ),
                ("created_datetime", models.DateTimeField(auto_now_add=True)),
                ("modified_datetime", models.DateTimeField(auto_now=True)),
                (
                    "itinerary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="itineraries.itinerary",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="itinerary_items",
                        to="locations.location",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="itinerary_items",
                        to="routes.route",
                    ),
                ),
            ],
            options={
                "verbose_name": "Itinerary Item",
                "verbose_name_plural": "Itinerary Items",
            },
        ),
    ]
